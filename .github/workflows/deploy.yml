name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Запускать при пуше в ветку main
  pull_request:
    branches:
      - main  # Запускать при создании Pull Request в ветку main

jobs:
  # Проверка и тестирование приложения
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run tests
      env:
        DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@localhost:5432/${{ secrets.DB_NAME }}
      run: |
        poetry run pytest

  # Деплой на сервер
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Выполняется только если этап 'test' прошёл успешно

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /path/to/your/app
          git pull origin main
          poetry install
          docker-compose down
          docker-compose up -d
